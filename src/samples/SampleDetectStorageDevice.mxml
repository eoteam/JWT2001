<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009"
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
					label="Detect Storage Sample" 
					creationComplete="init()">
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;

			[Bindable]
			protected var rootDir:File; 

			[Bindable]
			protected var path:String;

			protected function init():void
			{
				if (StorageVolumeInfo.isSupported)
				{
					StorageVolumeInfo.storageVolumeInfo.addEventListener(StorageVolumeChangeEvent.STORAGE_VOLUME_MOUNT, onVolumeMount);
					StorageVolumeInfo.storageVolumeInfo.addEventListener(StorageVolumeChangeEvent.STORAGE_VOLUME_UNMOUNT, onVolumeUnmount);
				}
				else Alert.show("AIR 2.0 storage detection is not supported.");
			}
			
			protected function onVolumeMount(e:StorageVolumeChangeEvent):void
			{
				this.deviceName.text = e.storageVolume.name;
				this.fileSystemType.text = e.storageVolume.fileSystemType;
				this.isRemovable.selected = e.storageVolume.isRemovable;
				this.isWritable.selected = e.storageVolume.isWritable;
				rootDir = e.storageVolume.rootDirectory;
				this.fileGrid.directory = rootDir;
				path = rootDir.nativePath;
				lblStatus.text = "Storage volume detected";
				this.fileGrid.visible = true;
				group1.visible = true;
				group2.visible = true;
			}
			
			protected function onVolumeUnmount(e:StorageVolumeChangeEvent):void
			{
				lblStatus.text = "Storage volume unmount";
				fileGrid.visible = false;
				group1.visible = false;
				group2.visible = false;
			}
			
			protected function onFileGridDoubleClick(event:MouseEvent):void
			{
				if (rootDir != null)
				{
					var fsg:FileSystemDataGrid = event.currentTarget as FileSystemDataGrid;
					if (fsg.selectedItem != null)
						(fsg.selectedItem as File).openWithDefaultApplication();
				}
			}
		]]>
	</fx:Script>
	
	<s:Panel width="100%" height="100%" horizontalCenter="0" title="Mass Storage Device Detection Sample">
		<s:layout>
			<s:VerticalLayout paddingLeft="8" paddingTop="8" paddingBottom="8" paddingRight="8" gap="8"/>
		</s:layout>
		<s:Label id="lblStatus" fontWeight="bold" text="Waiting on external storage device to be inserted (USB, firewire etc)..."/>
		
		<s:HGroup id="group1" verticalAlign="middle" visible="false" fontWeight="bold">
			<s:Label text="Storage Volume Info - Contents of {path}"/>
			<s:Label text="Name:"/>
			<s:Label id="deviceName" color="0x336699"/>
			<s:Label text="File System Type:"/>
			<s:Label id="fileSystemType" color="0x336699"/>
		</s:HGroup>	
		
		<mx:FileSystemDataGrid id="fileGrid" width="660" height="200" doubleClickEnabled="true" doubleClick="onFileGridDoubleClick(event)" 
							   visible="false"/>
		
		<s:HGroup id="group2" verticalAlign="middle" visible="false">
			<s:Button label="Up" click="fileGrid.navigateUp();" enabled="{fileGrid.canNavigateUp}"/>
			<s:CheckBox id="isRemovable" label="Removable Device?" enabled="false"/>
			<s:CheckBox id="isWritable" label="Writable Device?" enabled="false"/>  
		</s:HGroup>    
	</s:Panel>
	
</s:NavigatorContent>