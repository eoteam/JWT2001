<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" currentState="closedAndMap" xmlns:buttons="com.pentagram.view.skins.buttons.*">

	<fx:Script>
		<![CDATA[
			import com.pentagram.model.vo.Category;
			
			import mx.collections.ArrayList;
			import mx.events.IndexChangedEvent;
			
			import spark.events.IndexChangeEvent;
			import spark.skins.spark.CheckBoxSkin;
			
			public function set state(value:String):void {
				if(openStates.indexOf(currentState) != -1)
					currentState = 'openAnd'+value;
				else currentState = 'closedAnd'+value;
			}
			public function get state():String {
				if(clusterStates.indexOf(currentState) != -1)
					return 'Cluster';
				else if(mapStates.indexOf(currentState) != -1)
					return 'Map';
				else if(graphStates.indexOf(currentState) != -1)
					return 'Graph';
				else return '';
			}
			public function get isOpen():Boolean {
				if(openStates.indexOf(currentState) != -1)
					return true;
				else if(mapStates.indexOf(currentState) != -1)
					return false;
				else return false;
			}
			public function handleChange(event:IndexChangeEvent):void {
				check.selected = false;
			}
			public function get selectedCategories():Array {
				var results:Array = [];
				for each(var item:Category in ArrayList(this.continentList.dataProvider).source) {
					if(item.selected)
						results.push(item.name);
				}
				return results;
			}
			protected function toggle_changeHandler(event:Event):void
			{
				if(toggle.selected) {
					currentState = "openAnd"+state;
					
				}
				else currentState = "closedAnd"+state;
			}
			
		]]>
	</fx:Script>

	<fx:Declarations>
		<mx:ViewStack id="visualizerArea" />
		<fx:Array id="clusterStates">
			<fx:String>closedAndCluster</fx:String>
			<fx:String>openAndCluster</fx:String>
		</fx:Array>
		<fx:Array id="mapStates">
			<fx:String>closedAndMap</fx:String>
			<fx:String>openAndMap</fx:String>
		</fx:Array>
		<fx:Array id="graphStates">
			<fx:String>closedAndGraph</fx:String>
			<fx:String>openAndGraph</fx:String>
		</fx:Array>
		<fx:Array id="openStates">
			<fx:String>openAndCluster</fx:String>
			<fx:String>openAndMap</fx:String>
			<fx:String>openAndGraph</fx:String>
		</fx:Array>
		<fx:Array id="closedStates">
			<fx:String>closedAndCluster</fx:String>
			<fx:String>closedAndMap</fx:String>
			<fx:String>closedAndGraph</fx:String>
		</fx:Array>
		<fx:Number id="toggleWidth">11</fx:Number>
	</fx:Declarations>
	<s:states>
		<s:State name="closedAndCluster" stateGroups="closed,cluster" />
		<s:State name="openAndCluster" stateGroups="open,cluster" />
		<s:State name="closedAndMap" stateGroups="closed,map" />
		<s:State name="openAndMap" stateGroups="open,map" />
		<s:State name="closedAndGraph" stateGroups="closed,graph" />
		<s:State name="openAndGraph" stateGroups="open,graph" />
	</s:states>

		<s:ToggleButton id="toggle" width="{toggleWidth}" height="100%" change="toggle_changeHandler(event)" skinClass="com.pentagram.view.skins.buttons.RightToolsButton"/>
		
		<s:Rect width.closed="0" left="{toggleWidth}" height="100%" width="{toolContainer.width}">
			<s:fill>
				<s:SolidColor color="0x1A1A1A" alpha="0.85" />
			</s:fill>
		</s:Rect> 
		
		<s:VGroup width.closed="0" left="{toggleWidth}" id="toolContainer" gap="0">
			
			<s:Group right="0" left="6">
				<s:ToggleButton skinClass="com.pentagram.view.skins.buttons.EyeButton" 
				selected="true" id="check" verticalCenter="0" width="16" left="7"/>
				<s:Rect width="0.25" height="100%" left="24">
					<s:stroke>
						<s:SolidColorStroke weight="0.25" color="0x666666"/>
					</s:stroke>
				</s:Rect>
				<s:Button verticalCenter="0" skinClass="com.pentagram.view.skins.buttons.ContinentToggleButton"  id="select"
				label="Categories" left="25"  color="#FFFFFF" />
				<s:Rect left="0" right="0" height="0.25" bottom="0">
					<s:stroke>
						<s:SolidColorStroke color="0x666666" weight="0.25" />
					</s:stroke>
				</s:Rect>	
			</s:Group>
			
			<s:List borderVisible="false"  id="continentList"  change="handleChange(event)"  allowMultipleSelection="true"
			itemRenderer="com.pentagram.view.renderers.RegionsToolListRenderer"  contentBackgroundAlpha="0">
				<s:layout>
					<s:VerticalLayout paddingLeft="4" gap="0" />
				</s:layout>
			</s:List>
			
			<s:Rect width="100%" height="4">
				<s:fill>
					<s:SolidColor color="0x666666"/>
				</s:fill>
			</s:Rect>
			<s:Rect height="8" />
			<s:Label text="View Options" color="0xffffff" paddingLeft="4" />
			<s:Rect width="100%" height="0.25">
				<s:stroke>
					<s:SolidColorStroke color="0x666666" weight="0.25" />
				</s:stroke>
			</s:Rect>
			
			<s:CheckBox  label="X-Ray Mode" id="xrayToggle"  includeIn="map,cluster" textAlign="center"  height="25" selected="true" color="0xffffff"/>
			<s:Rect height="4" />
			<s:CheckBox label="Show Map" textAlign="center" height="25" selected="true" id="mapToggle" includeIn="map" color="0xffffff"   />
			<s:Rect height="4" />
			<s:Button label="Close Tooltips" id="closeTooltipsBtn" styleName="darkButton" />
			<s:Rect height="4" />
			<s:Rect width="100%" height="0.25">
				<s:stroke>
					<s:SolidColorStroke color="0x666666" weight="0.25" />
				</s:stroke>
			</s:Rect>		
			
			<s:Rect height="15" />
			<s:HSlider minimum="10" value="25" maximum="100" id="maxRadiusSlider" snapInterval="0.01" stepSize="0.01"/>
			<s:Rect height="10" />
<!--			<s:List id="colorList" contentBackgroundAlpha="0" width="100%">
				<s:layout>
					<s:TileLayout clipAndEnableScrolling="true"  />
				</s:layout>
				<s:itemRenderer>
					<fx:Component>
						<s:ItemRenderer>
							<s:Ellipse width="20" height="20">
								<s:fill>
									<s:SolidColor color="{data}" />
								</s:fill>
							</s:Ellipse>
						</s:ItemRenderer>
					</fx:Component>
				</s:itemRenderer>
			</s:List>-->
		</s:VGroup>

</s:Group>
