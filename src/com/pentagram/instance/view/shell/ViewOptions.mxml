<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" creationComplete="group1_creationCompleteHandler(event)"
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:components="org.flashcommander.components.*" 
		 xmlns:vo="com.pentagram.model.vo.*">

	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			protected function button1_clickHandler(event:MouseEvent):void
			{
				currentState = currentState == "open"?"closed":"open";
			}
			
			private function group1_creationCompleteHandler(event:FlexEvent):void
			{
				optionsHolder.setStyle("horizontalScrollPolicy","off");
				optionsHolder.setStyle("verticalScrollPolicy","off");
			}
			public function set datasets(value:ArrayList):void {
				_datasets = value;
				
				if(_datasets && _datasets.length > 0) {
					datasetList.selectedIndex = 0;
					dataset = _datasets.getItemAt(0) as Dataset;
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<vo:Dataset id="dataset" />
		<s:ArrayList id="_datasets"   />
	</fx:Declarations>
	
	<s:states>
		<s:State name="closed" />
		<s:State name="open" />
	</s:states>
	<s:transitions>
		<s:Transition toState="*">
			<s:Resize target="{optionsHolder}" duration="500" />
		</s:Transition>
	</s:transitions>
	
	
	<s:Group width="100%" contentBackgroundAlpha="1"  contentBackgroundColor="#595A5C">
		<s:Label verticalCenter="0" text="View Options" left="0" click="button1_clickHandler(event)"  mouseChildren="false"
		color="#FFFFFF" paddingTop="2" paddingBottom="2" paddingLeft="4" fontFamily="FlamaBold" width="100%" right="18"/>		
		<s:Button skinClass="com.pentagram.view.skins.buttons.DoubleArrowButton" chromeColor="0x1a1a1a" right="2" top="2" bottom="2" click="button1_clickHandler(event)"/>
		
	</s:Group>
	
	
	<s:Rect width="100%" height="0.25" top="24">
		<s:stroke>
			<s:SolidColorStroke color="0x666666" weight="0.25" />
		</s:stroke>
	</s:Rect>	
	
	<s:Scroller width="100%" height.closed="0" height.open="220"  top="25" id="optionsHolder">
		<s:VGroup width="100%" clipAndEnableScrolling="false" gap="4" paddingTop="4">
			<s:VGroup paddingLeft="8" paddingRight="8" width="100%">
				<s:CheckBox  label="X-Ray Mode" id="xrayToggle"  left="6"  selected="true" color="0xffffff"/>
				<s:CheckBox  label="Toggle Map" id="mapToggle"  left="6"   selected="true" color="0xffffff"/>
			</s:VGroup>
		
			<s:Rect width="100%" height="0.25">
				<s:stroke>
					<s:SolidColorStroke color="0x666666" weight="0.25" />
				</s:stroke>
			</s:Rect>
			
			<s:VGroup paddingLeft="8"  paddingRight="8" width="100%">
				<s:Button label="Close Tooltips" id="closeTooltipsBtn" styleName="darkButton" width="100%" textAlignLast="left" />	
				<s:Button label="Organise Tooltips" id="organiseTooltipsBtn" styleName="darkButton" width="100%"  />	
			</s:VGroup>
		
			
			<s:Rect width="100%" height="0.25">
				<s:stroke>
					<s:SolidColorStroke color="0x666666" weight="0.25" />
				</s:stroke>
			</s:Rect>		
			
			<s:HGroup width="100%" paddingLeft="8" paddingRight="8" verticalAlign="middle">
				<s:Label text="Radius" color="0xffffff"/>
				<s:HSlider width="100%" showDataTip="true" minimum="10" value="25" maximum="100" id="maxRadiusSlider" snapInterval="0.01" stepSize="0.01"/>				
			</s:HGroup>
			
			<s:Rect width="100%" height="0.25">
				<s:stroke>
					<s:SolidColorStroke color="0x666666" weight="0.25" />
				</s:stroke>
			</s:Rect>
			
			<s:VGroup width="100%" paddingLeft="8" paddingRight="8" clipAndEnableScrolling="false" styleName="darkPanel">
				<s:Label text="Scale Filter" color="0xFFFFFF" />
				<s:DropDownList width="100%" labelField="name" dataProvider="{_datasets}"  id="datasetList" chromeColor="0x1a1a1a" color="0xffffff" change="this.dataset=datasetList.selectedItem as Dataset"/>
				
				<mx:HSlider thumbCount="2" minimum="{dataset?dataset.minCopy:0}" maximum="{dataset?dataset.maxCopy:0}" chromeColor="0x1a1a1a" showDataTip="true" accentColor="0xcccccc"  
				allowThumbOverlap="false" allowTrackClick="true" snapInterval="0.001"  values="{dataset?[dataset.min,dataset.max]:[0,0]}" 
				tickColor="0xcccccc"  tickInterval="{dataset?Math.floor((dataset.maxCopy - dataset.minCopy))/10:1}" id="range"   />				
			</s:VGroup>

		</s:VGroup>
	</s:Scroller>
</s:Group>
