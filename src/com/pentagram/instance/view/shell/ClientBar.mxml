<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx">

	<s:layout>
		<s:BasicLayout clipAndEnableScrolling="true" />
	</s:layout>
	<fx:Declarations>
		<fx:Number id="barHeight">60</fx:Number>
	</fx:Declarations>
	<s:SkinnableContainer backgroundColor="0xE3E4E4" height="{barHeight}" width="100%">
		
		<s:layout>
			<s:HorizontalLayout gap="0" verticalAlign="middle"  paddingLeft="5"/>
		</s:layout>
		<mx:Image id="logo" height="{barHeight-5}"  source="{Constants.FILES_URL+client.thumbs}" scaleContent="true" maintainAspectRatio="true"/>
		
		<s:Rect width="15" excludeFrom="editor" />
		<s:Line height="100%" excludeFrom="editor">
			<s:stroke>
				<s:SolidColorStroke weight="1" color="0xB3B1AC" />
			</s:stroke>
		</s:Line>
		
		<s:Rect width="15" excludeFrom="editor"/>
		
		<s:Label text="Full Name:" excludeFrom="editor"/>
		<s:Rect width="4" excludeFrom="editor"/>
		<s:Label text="{client.name}"  excludeFrom="editor"/>
		<s:Rect width="10" excludeFrom="editor"/>
		
		<s:Label text="Founded:" excludeFrom="editor"/>
		<s:Rect width="4" excludeFrom="editor"/>
		<s:Label text="{client.founded.toString()}"  excludeFrom="editor"/>
		<s:Rect width="10" excludeFrom="editor"/>
		
		<s:Label text="Industry:" excludeFrom="editor"/>
		<s:Rect width="4" excludeFrom="editor"/>
		<s:Label text="{client.tags.toString()}"  excludeFrom="editor"/>		
		<s:Rect width="10" excludeFrom="editor"/>
		
		<s:Label text="Website:" excludeFrom="editor"/>
		<s:Rect width="4" excludeFrom="editor"/>
		<s:Label text="{client.website}" excludeFrom="editor" />
		<s:Rect width="100%" excludeFrom="editor"/>
		
		<s:Rect width="1" height="100%" excludeFrom="editor">
			<s:fill>
				<s:SolidColor color="0xB3B1AC" />
			</s:fill>
		</s:Rect>	
		
		<s:ToggleButton id="infoBtn" excludeFrom="editor" selected.editor="false"
		click="togglebutton1_clickHandler(event)" skinClass="com.pentagram.view.skins.buttons.ClientInfoButton" 
		width="100" height="100%" focusEnabled="false" />
	</s:SkinnableContainer>											

	<s:Rect width="100%" height="1" top="{barHeight}">
		<s:fill>
			<s:SolidColor color="0xB3B1AC" />
		</s:fill>
	</s:Rect>
	
	<s:Group width="100%" height="325"  top="{barHeight+1}"  visible.opened="true" id="infoPanelContainer">
		<s:clipAndEnableScrolling>true</s:clipAndEnableScrolling>
		<s:SkinnableContainer id="infoPanel" width="100%" height="100%" backgroundColor="0xE3E4E4" backgroundAlpha="0.95" y.closedStates="-600" y.opened="0">
			<s:layout>
				<s:VerticalLayout paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="5" gap="15"/>
			</s:layout>
			<s:Label fontSize="24" fontFamily="FlamaBold" text="{client.name}"  />
			<s:HGroup gap="10" width="100%" height="100%">
				<s:VGroup width="100%" height="100%">
					
					<s:Line width="100%" height="1">
						<s:stroke>
							<s:SolidColorStroke weight="1" color="0xB3B1AC"/>
						</s:stroke>
					</s:Line>
					
					<s:Label text="Full Name" />
					<s:Label text="{client.name}"  />
					<s:Rect height="4" />

					<s:Line width="100%" height="1">
						<s:stroke>
							<s:SolidColorStroke weight="1" color="0xB3B1AC"/>
						</s:stroke>
					</s:Line>
									
					<s:Label text="Founded" />
					<s:Label text="{client.founded.toString()}"  />
					<s:Rect height="4" />

					<s:Line width="100%" height="1">
						<s:stroke>
							<s:SolidColorStroke weight="1" color="0xB3B1AC"/>
						</s:stroke>
					</s:Line>
										
					<s:HGroup width="100%" verticalAlign="middle">
						<s:Label text="Headquarters" />
						<s:Rect width="100%" />
						<s:Button label="map" />
					</s:HGroup>
					<s:Label text="{client.headquarters}"  />		
					<s:Rect height="4" />
					
					<s:Line width="100%" height="1">
						<s:stroke>
							<s:SolidColorStroke weight="1" color="0xB3B1AC"/>
						</s:stroke>
					</s:Line>
										
					<s:Label text="Employees" />
					<s:Label text="{client.employees.toString()}"  />		
					<s:Rect height="4" />
					
				</s:VGroup>
				<s:VGroup width="100%" height="100%">
					<s:Line width="100%" height="1">
						<s:stroke>
							<s:SolidColorStroke weight="1" color="0xB3B1AC"/>
						</s:stroke>
					</s:Line>
					
				</s:VGroup>
				
				<s:VGroup width="100%" height="100%">
					<s:Line width="100%" height="1">
						<s:stroke>
							<s:SolidColorStroke weight="1" color="0xB3B1AC"/>
						</s:stroke>
					</s:Line>
					
					<s:Label text="Website" />
					<s:Button label="{client.website}" />
					<s:Rect height="4" />
					
					<s:Line width="100%" height="1">
						<s:stroke>
							<s:SolidColorStroke weight="1" color="0xB3B1AC"/>
						</s:stroke>
					</s:Line>
					
					<s:Label text="Similar Companies in View" />
					<s:List dataProvider="{new ArrayList(client.relatedcontent.split(','))}" borderVisible="false">
						<s:layout>
							<s:VerticalLayout gap="2" />
						</s:layout>
						<s:itemRenderer>
							<fx:Component>
								<s:ItemRenderer>
									<s:Button  label="{this.data}"/>	
								</s:ItemRenderer>
							</fx:Component>
						</s:itemRenderer>
					</s:List>
				</s:VGroup>
			</s:HGroup>
		</s:SkinnableContainer>	
	</s:Group>
	
	
	
	<fx:Script>
		<![CDATA[
			import com.pentagram.controller.Constants;
			import com.pentagram.model.vo.Client;
			
			import mx.collections.ArrayList;
			[Bindable] public var client:Client;

			protected function togglebutton1_clickHandler(event:MouseEvent):void
			{
				this.currentState = infoBtn.selected ? "opened":"closed";
			}

		]]>
	</fx:Script>
	<s:filters>
		<s:DropShadowFilter   alpha="0.5" angle="90" blurX="4.0" blurY="4.0" color="0x000000" distance="4.0" 
		hideObject="false"  inner="false" knockout="false" quality="2" strength="1"/>
	</s:filters>
	<s:states>
		<s:State name="closed" id="closedState" stateGroups="closedStates"/>
		<s:State name="opened" id="openedState" />
		<s:State name="editor" id="editorState" stateGroups="closedStates" />
	</s:states>
	<s:transitions>
		<s:Transition toState="closed">
			<s:Sequence>
				<s:Move target="{infoPanel}" duration="500" />
				<s:SetAction property="visible" value="false" target="{infoPanelContainer}" />
			</s:Sequence>	
		</s:Transition>
		<s:Transition toState="opened">
			<s:Move target="{infoPanel}" duration="500" />
		</s:Transition>
	</s:transitions>
</s:Group>
