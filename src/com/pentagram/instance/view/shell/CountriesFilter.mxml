<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"  
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:controls="com.pentagram.view.controls.*">
	
	<fx:Script>
		<![CDATA[
			import com.pentagram.main.event.ViewEvent;
			import com.pentagram.model.vo.Country;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.events.TextOperationEvent;
			private function button1_clickHandler(event:MouseEvent):void
			{
				currentState = currentState == "open"?"closed":"open";
			}
			private function compareBtn_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent(new ViewEvent(ViewEvent.START_COMPARE));
			}
			private function textinput1_changeHandler(event:TextOperationEvent):void
			{
				if(searchInput.text != '') 
					ArrayCollection(countryList.dataProvider).filterFunction = filterCountries; 
				else 
					ArrayCollection(countryList.dataProvider).filterFunction = null; 
				ArrayCollection(countryList.dataProvider).refresh(); 
			}
			private function filterCountries(item:Country):Boolean {
				return item.name.toLowerCase().indexOf(searchInput.text.toLowerCase()) > -1;
			}
			private function searchInput_clearHandler(event:Event):void
			{
				ArrayCollection(countryList.dataProvider).filterFunction = null; 
				ArrayCollection(countryList.dataProvider).refresh();
			}
			
			
		]]>
	</fx:Script>
	
	
	<fx:Declarations>
		
	</fx:Declarations>
	<s:states>
		<s:State name="closed" />
		<s:State name="open" />
	</s:states>
	<s:transitions>
		<s:Transition toState="*">
			<s:Resize target="{gridHolder}" duration="500" />
		</s:Transition>
	</s:transitions>
	
	<s:Group width="100%" contentBackgroundAlpha="1"  contentBackgroundColor="#595A5C">
		<s:Label verticalCenter="0" text="Countries" click="button1_clickHandler(event)"  mouseChildren="false"
		color="#FFFFFF" paddingTop="2" paddingBottom="2" paddingLeft="4" width="100%" fontFamily="FlamaBold" right="18"/>		
		<s:Button skinClass="com.pentagram.view.skins.buttons.DoubleArrowButton" chromeColor="0x1a1a1a" right="2" top="2" bottom="2" click="button1_clickHandler(event)"/>
	</s:Group>
	
	<s:Rect width="100%" height="0.25" top="24">
		<s:stroke>
			<s:SolidColorStroke color="0x666666" weight="0.25" />
		</s:stroke>
	</s:Rect>	
	<s:Group width="100%" height.closed="0" height.open="{this.parent.parent.height}" top="24" clipAndEnableScrolling="true" id="gridHolder">
		<s:DataGrid width="100%" id="countryList" contentBackgroundAlpha="1"  borderVisible="false" 
			height="100%" left="4" right="4"  bottom="34" top="4" 
			selectionColor="0xffffff" rollOverColor="0xffffff" contentBackgroundColor="0x242424"
			skinClass="com.pentagram.view.skins.controls.DarkDataGrid" sortableColumns="true" 
			selectionMode="multipleRows">
			<s:columns>
				<s:ArrayList>
					<s:GridColumn dataField="value" sortable="false" id="labels" headerText="Country" >
						<s:headerRenderer>
							<fx:Component>
								<s:GridItemRenderer contentBackgroundAlpha="1"  contentBackgroundColor="#595A5C" height="24">
									<!--<s:Label  color="0xffffff" text="Country"  paddingLeft="4" fontFamily="FlamaMedium" verticalCenter="0"/>-->
								</s:GridItemRenderer>
							</fx:Component>
						</s:headerRenderer>
						<s:itemRenderer>
							<fx:Component>
								<s:GridItemRenderer height="21">
									<s:Label text="{data.name}"  color="0x666666" paddingLeft="4" width="100%" fontFamily="FlamaMedium" verticalCenter="0" maxDisplayedLines="1"/>
								</s:GridItemRenderer>
							</fx:Component>
						</s:itemRenderer>
					</s:GridColumn>
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
		
		<controls:SuperTextInput  id="searchInput" prompt="Filter" left="3" right="3"  top="4"
		 change="textinput1_changeHandler(event)"  clear="searchInput_clearHandler(event)"
		 skinClass="com.pentagram.view.skins.controls.DarkSuperTextInputSkin" />
		
		
		<s:Button label="Clear Selection" id="clearSelection" styleName="darkButton" width="100%"  left="8" right="8" bottom="4" />		
	
	</s:Group>
</s:Group>
