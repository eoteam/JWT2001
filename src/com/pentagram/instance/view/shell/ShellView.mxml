<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:editor="com.pentagram.instance.view.editor.*" 
		 xmlns:shell="com.pentagram.instance.view.shell.*" 
		 xmlns:vo="com.pentagram.model.vo.*"
		 xmlns:primatives="ws.tink.spark.primatives.*"
		 xmlns:graphics="ws.tink.spark.graphics.*" 
		 xmlns:visualizer="com.pentagram.instance.view.visualizer.*"
		  creationComplete="group1_creationCompleteHandler(event)" xmlns:assets="assets.*"> 
	<fx:Script>
		<![CDATA[
			import com.pentagram.instance.view.visualizer.IGraphView;
			import com.pentagram.model.vo.Client;
			import com.pentagram.model.vo.Dataset;
			import com.pentagram.view.skins.YearListSkin;
			
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ModuleEvent;
			import mx.modules.IModuleInfo;
			import mx.modules.ModuleManager;
			
			import spark.events.IndexChangeEvent;
			
			public var graphView:IGraphView;
			private var info:IModuleInfo = null; 
			
			private function setInfoBtn_clickHandler(event:MouseEvent):void {
				if(setInfoBtn.selected) {
					infoPanelContainer.visible = true;
					showInfoPanelEffect.play();
				}	
				else {
					hideInfoPanelEffect.play();
				}
			}
			private function hideInfoPanel(event:MouseEvent):void {
				hideInfoPanelEffect.play();
				setInfoBtn.selected = false;
			}
			private function mainStack_changeHandler(event:IndexChangedEvent):void {
				if(mainStack.selectedIndex == 1) 
					this.clientBar.currentState = this.clientBar.editorState.name;
				else {
					this.clientBar.currentState = this.clientBar.closedState.name;		
					this.clientBar.infoBtn.selected = false;
				}
			}
			private function group1_creationCompleteHandler(event:FlexEvent):void {
				info = ModuleManager.getModule("com/pentagram/instance/view/visualizer/GraphView.swf");
				if (info != null) {
					info.addEventListener(ModuleEvent.READY, modEventHandler);
					info.addEventListener(ModuleEvent.ERROR, modErrorHandler);
					info.load();
				}
			}

			private function modEventHandler(e:ModuleEvent):void {
				//instantiate an add the module to the UI
				info.removeEventListener(ModuleEvent.READY, modEventHandler);
				info.removeEventListener(ModuleEvent.ERROR, modErrorHandler);
				if (graphView == null) {
					graphView = info.factory.create() as IGraphView;
					if (graphView != null) {
						graphView.x = 0;
						graphView.y = 0;
						graphView.percentWidth = 100;
						graphView.percentHeight = 100;
						visualizerArea.addElement(graphView as Group);
						
						//If the loaded module implements
						//the known interface we can make calls 
						//into this module.
						if (graphView is IGraphView) {
							//
						}                    
					}
				}
			}    
			
			//module loading failure handler
			private function modErrorHandler(event:ModuleEvent):void {
				//cleanup and display an error alert
				info.removeEventListener(ModuleEvent.READY, modEventHandler);
				info.removeEventListener(ModuleEvent.ERROR, modErrorHandler);
				info = null;
				//Alert.show(event.toString(), "Error Loading Module");
				unloadModule();
			}
			
			//Remove from UI and unload the module
			private function unloadModule():void {
				//moduleContainer.removeAllChildren();
				if (graphView != null && info != null) {
					info.addEventListener(ModuleEvent.UNLOAD, unloadEventHandler);
					info.unload();
				}
			}
			
			//Module unload complete event handler
			private function unloadEventHandler(e:ModuleEvent):void {
				info.removeEventListener(ModuleEvent.UNLOAD, unloadEventHandler);
				graphView = null;
				info = null;
			}			

		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:Sequence id="hideInfoPanelEffect">
			<s:Move target="{infoPanel}" duration="500" yTo="-120" />
			<s:SetAction property="visible" value="false" target="{infoPanelContainer}" />
		</s:Sequence>
		<s:Move target="{infoPanel}" duration="500" yTo="0" id="showInfoPanelEffect" />
		<s:Fade alphaTo="1" duration="500" id="fadeIn" />
		<s:Fade alphaTo="0" duration="500" id="fadeOut" />
		<s:Power id="powerEasing" easeInFraction="0.25" exponent="4"/>
		<vo:Client id="client" />
	</fx:Declarations>

	
	<s:states>
		<s:State name="loggedOut" id="loggedOutState"/>
		<s:State name="loggedIn" id="loggedInState"/>
	</s:states>

	
	<mx:ViewStack width="100%" height="100%" top="50" bottom="50" id="mainStack"  backgroundColor="0xFAFCFB" change="mainStack_changeHandler(event)">
		<s:NavigatorContent width="100%" height="100%" label="Visualizer" >
			
			<!-- viewing area -->
			<s:Group width="100%" top="61" bottom="119" id="visualizerArea">
				<!--<assets:colors width="100%" height="100%"  />-->
				<mx:Image scaleContent="true" maintainAspectRatio="true" width="100%" height="100%" 
			  	showEffect="{fadeIn}" hideEffect="{fadeOut}"		
			  	source="assets/map.png" visible="{mapToggle.selected}" />
			</s:Group>
			
			<s:HGroup verticalAlign="middle" height="60" left="5" right="5">
				<s:Label fontSize="24" fontFamily="FlamaBold" text="Number of Branches by Region" />
				<s:ToggleButton id="setInfoBtn" width="10" height="8" click="setInfoBtn_clickHandler(event)" />
			</s:HGroup>
			<s:Rect width="100%" height="1" y="60">
				<s:fill>
					<s:SolidColor color="0xB3B1AC" />
				</s:fill>
			</s:Rect> 
			<s:Group width="100%"   top="61"  visible="false" id="infoPanelContainer">
				<s:clipAndEnableScrolling>true</s:clipAndEnableScrolling>
				<s:SkinnableContainer id="infoPanel" width="100%"  backgroundColor="0xFAFCFB" backgroundAlpha="0.8" y="-120">
					<s:RichEditableText width="100%"  paddingTop="3" paddingBottom="6" editable="false" editable.loggedIn="true" right="120" left="10" >
						<s:text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus vitae convallis nibh. Morbi congue sollicitudin diam, vel facilisis nibh placerat hendrerit. Suspendisse faucibus orci id ligula malesuada mattis. Praesent eget purus ligula, quis scelerisque sapien. Ut pellentesque nisi in turpis pulvinar iaculis. Fusce dapibus vestibulum nisl, non consequat nunc mollis vel. Cras rutrum dictum dui, eu aliquet elit sodales vitae. Donec scelerisque suscipit mauris tincidunt pharetra. Donec nec nisi vel augue adipiscing dignissim sed vel leo. Cras vel diam a justo laoreet luctus vitae eu justo.</s:text>
					</s:RichEditableText>
					<s:VGroup right="10">
						<s:Button label="close" click="hideInfoPanel(event)"/>
						<s:Button label="Edit" includeIn="loggedIn" />
					</s:VGroup>		
				</s:SkinnableContainer>
			</s:Group>
			
			<!-- filters and tools -->
			<s:Rect width="100%" height="1" bottom="120">
				<s:fill>
					<s:SolidColor color="0xB3B1AC" />
				</s:fill>
			</s:Rect> 
			
			<s:HGroup width="100%" verticalAlign="middle" bottom="75"  height="30" paddingLeft="10" paddingRight="10" gap="10">
				<s:ToggleButton label="Play"  id="playBtn"/>
				
				<primatives:Line width="1" height="40">
					<primatives:stroke>
						<graphics:SolidColorDash dash="0.05" gap="1" weight="0.5" color="0x000000" caps="square"/>
					</primatives:stroke>
				</primatives:Line>
				
				
				<s:List id="yearSlider"  borderVisible="false" allowMultipleSelection="true"
						itemRenderer="com.pentagram.view.renderers.YearsListRenderer" 
						 skinClass="com.pentagram.view.skins.YearListSkin" requireSelection="true"
						rollOverColor="#C50E24" selectionColor="#C50E24">
					<s:layout>
						<s:HorizontalLayout gap="8" verticalAlign="middle" />
					</s:layout>
				</s:List>
				
				<primatives:Line width="1" height="40">
					<primatives:stroke>
						<graphics:SolidColorDash dash="0.05" gap="1" weight="0.5" color="0x000000" caps="square"/>
					</primatives:stroke>
				</primatives:Line>
				
				
			</s:HGroup>
				
			<s:Rect width="100%" height="1" bottom="60">
				<s:fill>
					<s:SolidColor color="0xB3B1AC" />
				</s:fill>
			</s:Rect> 
			<s:HGroup width="100%" verticalAlign="middle" height="60" gap="0"  bottom="0" paddingLeft="10" paddingRight="10">
				<s:ButtonBar>
					<s:layout>
						<s:HorizontalLayout gap="0"/>
					</s:layout>
					<s:dataProvider>
						<s:ArrayList>
							<fx:Object label="cluster" />
							<fx:Object label="graph" />
							<fx:Object label="map" />
						</s:ArrayList>
					</s:dataProvider>
				</s:ButtonBar>
				<s:Rect width="10" />
				
				<s:Label text="x:  "/>
				<s:DropDownList width="180" dataProvider="{client.datasets}" labelField="name"  id="firstSet"/>
				<s:Rect width="10" />
				<primatives:Line width="1" height="40">
					<primatives:stroke>
						<graphics:SolidColorDash dash="0.05" gap="1" weight="0.5" color="0x000000" caps="square"/>
					</primatives:stroke>
				</primatives:Line>
				<s:Rect width="10" />
				
				<s:Label text="y:  "/>
				<s:DropDownList width="180" dataProvider="{client.datasets}" labelField="name" id="secondSet"/>
				<s:Rect width="10" />
				<primatives:Line width="1" height="40">
					<primatives:stroke>
						<graphics:SolidColorDash dash="0.05" gap="1" weight="0.5" color="0x000000" caps="square"/>
					</primatives:stroke>
				</primatives:Line>
				<s:Rect width="5" />
				
				<s:Label text="size by:  "/>
				<s:DropDownList width="180" dataProvider="{client.datasets}" labelField="name"  id="thirdSet"/>
				<s:Rect width="10" />
				<primatives:Line width="1" height="40">
					<primatives:stroke>
						<graphics:SolidColorDash dash="0.05" gap="1" weight="0.5" color="0x000000" caps="square"/>
					</primatives:stroke>
				</primatives:Line>
				<s:Rect width="10" />

				<s:Label text="color by:  "/>
				<s:DropDownList width="180" dataProvider="{client.datasets}" labelField="name"/>
				<s:Rect width="10" />
				<primatives:Line width="1" height="40">
					<primatives:stroke>
						<graphics:SolidColorDash dash="0.05" gap="1" weight="0.5" color="0x000000" caps="square"/>
					</primatives:stroke>
				</primatives:Line>
				<s:Rect width="10" />
				
				<s:CheckBox label="Show Map" textAlign="center" height="25" selected="true" id="mapToggle"   />
			</s:HGroup>
		</s:NavigatorContent>
	
		<s:NavigatorContent width="100%" height="100%" label="Data Editor" includeIn="loggedIn">
<!--			<mx:ModuleLoader width="100%" height="100%"  id="editorLoader"  
			url="com/pentagram/view/modules/editor/EditorModule.swf" ready="moduleloader1_readyHandler(event)" /> 	-->
			<editor:EditorMainView left="10" top="50" bottom="50" right="10" currentState="overview"   id="editorView" client="{client}" />
		</s:NavigatorContent>
	</mx:ViewStack>
	<shell:ClientBarView width="100%" id="clientBar" client="{client}"/>
	
	<s:SkinnableContainer width="100%"  backgroundColor="0x333333" minHeight="50" bottom="0"  
	skinClass="com.pentagram.view.skins.BottomBarBackgroundSkin" id="bottomPanelContainer">	
		<shell:BottomBarView width="100%" height="40" bottom="10" id="bottomBarView"  />
		
		<s:TabBar right="150" height="22" bottom="28" dataProvider="{mainStack}"  includeIn="loggedIn" />
	</s:SkinnableContainer> 
	

</s:Group>
