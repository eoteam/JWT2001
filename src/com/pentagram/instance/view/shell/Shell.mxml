<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:editor="com.pentagram.instance.view.editor.*" 
		 xmlns:shell="com.pentagram.instance.view.shell.*" 
		 xmlns:vo="com.pentagram.model.vo.*"
		 xmlns:primatives="ws.tink.spark.primatives.*"
		 xmlns:graphics="ws.tink.spark.graphics.*" 
		 xmlns:visualizer="com.pentagram.instance.view.visualizer.*"
		 xmlns:assets="assets.*" 
		 xmlns:controls="com.pentagram.view.controls.*"
		 creationComplete="group1_creationCompleteHandler(event)" click="group1_clickHandler(event)"> 

	<fx:Script>
		<![CDATA[
			
			protected function visualizerArea_updateCompleteHandler(event:FlexEvent):void
			{
				if(visualizerArea.selectedIndex == 2 && mapView) {
					this.currentVisualizer.updateSize();

				}
					
				else if(visualizerArea.selectedIndex == 1 && graphView)
					this.currentVisualizer.updateSize();
				else if(visualizerArea.selectedIndex == 0 && clusterView)
					this.currentVisualizer.updateSize();
				else if(visualizerArea.selectedIndex == 3 && twitterView)
					this.currentVisualizer.updateSize();
			}
		]]>
	</fx:Script>

	
	<fx:Script source="ShellViewScript.as" />

	<fx:Declarations>
		<s:Sequence id="hideInfoPanelEffect">
			<s:Move target="{infoPanel}" duration="500" yTo="-120" />
			<s:SetAction property="visible" value="false" target="{infoPanelContainer}" />
		</s:Sequence>
		<s:Move target="{infoPanel}" duration="500" yTo="0" id="showInfoPanelEffect" />
		<s:Fade alphaTo="1" duration="500" id="fadeIn" />
		<s:Fade alphaTo="0" duration="500" id="fadeOut" />
		<s:Power id="powerEasing" easeInFraction="0.25" exponent="4"/>
		<vo:Client id="client" />
	</fx:Declarations>

	
	<s:states>
		<s:State name="loggedOut" id="loggedOutState"/>
		<s:State name="loggedIn" id="loggedInState"/>
	</s:states>

	
	<mx:ViewStack width="100%" height="100%" top="50" bottom="50" id="mainStack" backgroundColor="0xFAFCFB" change="mainStack_changeHandler(event)">
		<s:NavigatorContent width="100%" height="100%" label="Visualizer" id="viewArea">
			<s:SkinnableComponent skinClass="com.pentagram.view.controls.DottedGrid" width="100%" top="61" bottom="{tools.height}" />
			<!-- viewing area -->
			<mx:ViewStack contentBackgroundAlpha="0"  width="100%" top="61" bottom="{tools.height}" 
						   
			id="visualizerArea" selectedIndex="2" updateComplete="visualizerArea_updateCompleteHandler(event)">
				<s:NavigatorContent contentBackgroundAlpha="0" width="100%" height="100%" id="clusterHolder" label="Cluster" hideEffect="{fadeOut}" showEffect="{fadeIn}"/>
				<s:NavigatorContent contentBackgroundAlpha="0" width="100%" height="100%" id="graphHolder" label="Graph" hideEffect="{fadeOut}" showEffect="{fadeIn}"/>
				<s:NavigatorContent contentBackgroundAlpha="0" width="100%" height="100%" id="mapHolder" label="Map" hideEffect="{fadeOut}" showEffect="{fadeIn}"/>
				<s:NavigatorContent contentBackgroundAlpha="0" width="100%" height="100%" id="twitterHolder" label="Twitter" hideEffect="{fadeOut}" showEffect="{fadeIn}"	/>
			</mx:ViewStack>
			
			<s:HGroup verticalAlign="middle" height="60" left="5" right="5">
				<s:Label fontSize="24" fontFamily="FlamaBold" id="vizTitle" />
				<s:Button  skinClass="com.pentagram.view.skins.buttons.DoubleArrowButton"  id="setInfoBtn"  click="setInfoBtn_clickHandler(event)" />
			</s:HGroup>
			<s:Line width="100%" height="1" y="60">
				<s:stroke>
					<s:SolidColorStroke weight="1" color="0xB3B1AC"/>
				</s:stroke>
			</s:Line>
			<s:Group width="100%" top="61" visible="false" id="infoPanelContainer">
				<s:clipAndEnableScrolling>true</s:clipAndEnableScrolling>
				
				<s:SkinnableContainer id="infoPanel" width="100%"  backgroundColor="0xFAFCFB" backgroundAlpha="0.8" y="-120">
					<s:TextArea heightInLines="{NaN}" contentBackgroundAlpha="0"
					skinClass="com.pentagram.view.skins.controls.PlainTextArea" id="infoText" focusColor="0xcccccc"
					focusedTextSelectionColor="0x999999" unfocusedTextSelectionColor="0xcccccc" width="600" paddingTop="3" paddingBottom="6" 
					editable="false" editable.loggedIn="true"  left="10" prompt="Enter a description here..."  />	
					<s:VGroup left="610">
						<s:Button  id="saveButton" label="close" click="hideInfoPanel(event)" skinClass="com.pentagram.view.skins.buttons.CloseButton"/>
					</s:VGroup>		
					</s:SkinnableContainer>
				

			</s:Group>
			
			<!-- filters and tools -->
			<shell:RightTools right="0" id="filterTools" top="61" visualizerArea="{visualizerArea}"/>
			<shell:BottomTools id="tools" bottom="0" width="100%" client="{this.client}" visualizerArea="{visualizerArea}" clipAndEnableScrolling="false"/>
		</s:NavigatorContent>
	
		<s:NavigatorContent width="100%" height="100%" label="Data Editor" includeIn="loggedIn">
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="0xf7f7f7" />
				</s:fill>
			</s:Rect>
			<editor:EditorMainView left="10" top="50" bottom="50" right="10" currentState="overview" id="editorView" client="{client}" />
		</s:NavigatorContent>
	</mx:ViewStack>
	
	<shell:ClientBar width="100%" id="clientBar" client="{client}"/>
	
	<s:SkinnableContainer width="100%"  backgroundColor="0x333333" minHeight="50" bottom="0" skinClass="com.pentagram.view.skins.components.BottomBarBackground" id="bottomPanelContainer">	
		<shell:BottomBar width="100%" height="40" bottom="10" id="bottomBarView"  />
	</s:SkinnableContainer> 
	
	<s:TabBar right="150" height="22" bottom="29" dataProvider="{mainStack}"  includeIn="loggedIn">
		<s:itemRenderer>
			<fx:Component>
				<s:ButtonBarButton skinClass="com.pentagram.view.skins.buttons.BottomTabButton" />
			</fx:Component>
		</s:itemRenderer>
		<s:layout>
			<s:HorizontalLayout gap="5" />
		</s:layout>
	</s:TabBar>
	
	<shell:LoginPanel id="loginPanel" bottom="60" left="184" visible="{bottomBarView.loginBtn.selected}" />
	<shell:ExportSettingsPanel  right="10"  bottom="95" styleName="darkPanel" visible="{tools.settingsBtn.selected}" id="exportPanel"/>
	<shell:SavingImagePanel right="49"  bottom="83" styleName="darkPanel" visible="false" id="savingPanel"/>
</s:Group>
