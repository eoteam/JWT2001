<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:editor="com.pentagram.instance.view.editor.*" 
		 xmlns:shell="com.pentagram.instance.view.shell.*" 
		 xmlns:vo="com.pentagram.model.vo.*"
		 xmlns:primatives="ws.tink.spark.primatives.*"
		 xmlns:graphics="ws.tink.spark.graphics.*" 
		 xmlns:visualizer="com.pentagram.instance.view.visualizer.*"
		 xmlns:assets="assets.*" 
		 xmlns:controls="com.pentagram.view.controls.*"
		 xmlns:components="com.pentagram.view.skins.components.*"
		 creationComplete="group1_creationCompleteHandler(event)" 
		 click="group1_clickHandler(event)" > 

	<fx:Script>
		<![CDATA[
			
			private function visualizerArea_updateCompleteHandler(event:Event):void
			{
				var timer:Timer = new Timer(250,2);
				timer.addEventListener(TimerEvent.TIMER,resumeUpdate);
				timer.start();
			}
			private function resumeUpdate(event:TimerEvent):void {
				if(visualizerArea.selectedIndex == 2 && mapView && mapHolder.numElements > 0) 
					this.currentVisualizer.updateSize();
				else if(visualizerArea.selectedIndex == 1 && graphView && graphHolder.numElements > 0)
					this.currentVisualizer.updateSize();
				else if(visualizerArea.selectedIndex == 0 && clusterView && clusterHolder.numElements > 0)
					this.currentVisualizer.updateSize();
				else if(visualizerArea.selectedIndex == 3 && twitterView && twitterHolder.numElements > 0)
					this.currentVisualizer.updateSize();
			}

			private function viewArea_hideHandler(event:FlexEvent):void
			{
//				for (var i:int = systemManager.numChildren-1;i>=0;i--){
//					//trace(getQualifiedClassName(systemManager.getChildAt(i)));
//					var child:DisplayObject = systemManager.getChildAt(i);
//					if(getQualifiedClassName(child) == 'com.pentagram.instance.view.visualizer.renderers::RendererInfo' ||
//						getQualifiedClassName(child) == 'com.pentagram.instance.view.visualizer.renderers::TWRendererInfo'){
//						systemManager.removeChildAt(i);
//					}
//				}
				if(clusterView) clusterView.clearTooltips();
				if(twitterView) twitterView.clearTooltips();
				if(graphView) graphView.clearTooltips();
				mapView.clearTooltips();
			}

		]]>
	</fx:Script>

	
	<fx:Script source="ShellViewScript.as" />

	<fx:Declarations>
		<s:Sequence id="hideInfoPanelEffect">
			<s:Move target="{infoPanel}" duration="500" yTo="-120" />
			<s:SetAction property="visible" value="false" target="{infoPanelContainer}" />
		</s:Sequence>
		<s:Move target="{infoPanel}" duration="500" yTo="0" id="showInfoPanelEffect" />
		<s:Fade alphaTo="1" duration="500" id="fadeIn" startDelay="250" />
		<s:Fade alphaTo="0" duration="500" id="fadeOut" />
		<s:Power id="powerEasing" easeInFraction="0.25" exponent="4"/>
		<vo:Client id="client" />
	</fx:Declarations>

	
	<s:states>
		<s:State name="loggedOut" id="loggedOutState"/>
		<s:State name="loggedIn" id="loggedInState"/>
		<s:State name="fullScreen" />
	</s:states>

	<s:transitions>
		<s:Transition fromState="*" toState="*">
			<s:Parallel>
				<s:Wipe targets="{[bottomTools,bottomPanelContainer,tabBar]}" direction="down" />
				<s:Wipe targets="{[hgroup1,clientBar]}" direction="up" />
				<s:Resize targets="{[visualizerArea,mainStack]}" />
			</s:Parallel>
		</s:Transition>
		
<!--		<s:Transition fromState="fullScreen" toState="*">
			<s:Parallel>-->
				<!--<s:Sequence>-->
					<!--<s:Resize targets="{[hgroup1,bottomTools,bottomPanelContainer,clientBar,tabBar]}" />-->
					<!--<s:AddAction targets="{[hgroup1,bottomTools,bottomPanelContainer,clientBar,tabBar]}"  />-->
				<!--</s:Sequence>-->
<!--				<s:Resize targets="{[visualizerArea,mainStack]}" />
			</s:Parallel>
		</s:Transition>-->
	</s:transitions>
	
	<mx:ViewStack width="100%" height="100%" top="50" bottom="50" top.fullScreen="0" bottom.fullScreen="0" selectedIndex.fullScreen="0" 
		id="mainStack" backgroundColor="0xFAFCFB" change="mainStack_changeHandler(event)">
		
		<s:NavigatorContent width="100%" height="100%" label="Visualizer" id="viewArea" hide="viewArea_hideHandler(event)" 
		show="visualizerArea_updateCompleteHandler(event)" hideEffect="{fadeOut}" showEffect="{fadeIn}">
			<s:SkinnableComponent skinClass="com.pentagram.view.controls.DottedGrid" width="100%" top="61" bottom="{bottomTools.height}" 
			top.fullScreen="0" bottom.fullScreen="0"/>
			<!-- viewing area -->
			
				<mx:ViewStack contentBackgroundAlpha="0"  width="100%" top="41" bottom="{bottomTools.height}" top.fullScreen="0" bottom.fullScreen="0"		   
				id="visualizerArea" selectedIndex="2"><!-- show="visualizerArea_updateCompleteHandler(event)"-->
				
				<s:NavigatorContent contentBackgroundAlpha="0" width="100%" height="100%" id="clusterHolder" label="Cluster"
				show="visualizerArea_updateCompleteHandler(event)"					
				hideEffect="{fadeOut}" showEffect="{fadeIn}" hide="if(clusterView)clusterView.clearTooltips()"/>
				
				<s:NavigatorContent contentBackgroundAlpha="0" width="100%" height="100%" id="graphHolder" label="Graph"
				show="visualizerArea_updateCompleteHandler(event)"							
				hideEffect="{fadeOut}" showEffect="{fadeIn}" hide="if(graphView)graphView.clearTooltips()"/>
				
				<s:NavigatorContent contentBackgroundAlpha="0" width="100%" height="100%" id="mapHolder" label="Map"
				show="visualizerArea_updateCompleteHandler(event)"					
				hideEffect="{fadeOut}" showEffect="{fadeIn}" hide="if(mapView)mapView.clearTooltips();mapView.pause()"/>
				
				<s:NavigatorContent contentBackgroundAlpha="0" width="100%" height="100%" id="twitterHolder" label="Twitter"
				show="visualizerArea_updateCompleteHandler(event)"		
				hideEffect="{fadeOut}" showEffect="{fadeIn}" hide="if(twitterView)twitterView.clearTooltips()"	/>
			
			</mx:ViewStack>
			
			<s:HGroup verticalAlign="middle" height="40" left="7" right="5"  visible.fullScreen="false" id="hgroup1">
				<s:Label fontSize="24" fontFamily="FlamaBold" id="vizTitle"   maxDisplayedLines="1" maxWidth="{hgroup1.width-20}" />
				<s:Button  skinClass="com.pentagram.view.skins.buttons.DoubleArrowButton"  id="setInfoBtn"  click="setInfoBtn_clickHandler(event)" />
			</s:HGroup>
			<s:Line width="100%" height="1" y="40"  visible.fullScreen="false" id="line1">
				<s:stroke>
					<s:SolidColorStroke weight="1" color="0xB3B1AC"/>
				</s:stroke>
			</s:Line>
			
			<s:Group width="100%" top="41" visible="false" id="infoPanelContainer"  visible.fullScreen="false">
				<s:clipAndEnableScrolling>true</s:clipAndEnableScrolling>
				<s:SkinnableContainer id="infoPanel" width="100%"  backgroundColor="0xFAFCFB" backgroundAlpha="0.8" y="-120">
					<s:TextArea heightInLines="{NaN}" contentBackgroundAlpha="0"
					skinClass="com.pentagram.view.skins.controls.PlainTextArea" id="infoText" focusColor="0xcccccc"
					focusedTextSelectionColor="0x999999" unfocusedTextSelectionColor="0xcccccc" width="600" paddingTop="3" paddingBottom="6" 
					editable="false" editable.loggedIn="true"  left="10" prompt="Enter a description here..."  />	
					<s:Button left="610" id="saveButton" label="close" click="hideInfoPanel(event)" skinClass="com.pentagram.view.skins.buttons.CloseButton"/>	
					</s:SkinnableContainer>
			</s:Group>
			
			<!-- filters and tools -->
			<shell:RightTools right="0" id="filterTools" top="41" visualizerArea="{visualizerArea}"/>
			<shell:BottomTools id="bottomTools" bottom="0" width="100%" client="{this.client}" visualizerArea="{visualizerArea}" clipAndEnableScrolling="false"  visible.fullScreen="false"/>
		</s:NavigatorContent>
	
		<s:NavigatorContent width="100%" height="100%" label="Data Editor" includeIn="loggedIn" show="visualizerArea_updateCompleteHandler(event)" hideEffect="{fadeOut}" showEffect="{fadeIn}">
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="0xf7f7f7" />
				</s:fill>
			</s:Rect>
			<editor:EditorMainView left="10" top="50" bottom="50" right="10" currentState="overview" id="editorView" />
		</s:NavigatorContent>
	</mx:ViewStack>
	
	<shell:ClientBar width="100%" id="clientBar" client="{client}"  visible.fullScreen="false"/>
	
	<controls:ErrorPanel horizontalCenter="0"  id="errorPanel" width="100%" />
	<controls:ImportPanel horizontalCenter="0" id="importPanel" width="100%"/>
	
	<s:SkinnableContainer width="100%"  backgroundColor="0x333333" minHeight="50" bottom="0"  visible.fullScreen="false"
	skinClass="com.pentagram.view.skins.components.BottomBarBackground" id="bottomPanelContainer">	
		<shell:BottomBar width="100%" height="100%" id="bottomBarView"  />
	</s:SkinnableContainer> 
	
	<s:TabBar right="150" height="22" bottom="29" dataProvider="{mainStack}"  includeIn="loggedIn" id="tabBar">
		<s:itemRenderer>
			<fx:Component>
				<s:ButtonBarButton skinClass="com.pentagram.view.skins.buttons.BottomTabButton" />
			</fx:Component>
		</s:itemRenderer>
		<s:layout>
			<s:HorizontalLayout gap="5" />
		</s:layout>
	</s:TabBar>
	
	<shell:LoginPanel id="loginPanel" bottom="60" left="184" visible="{bottomBarView.loginBtn.selected}" visible.fullScreen="false"/>
	<shell:ExportSettingsPanel  right="10"  bottom="95" styleName="darkPanel" visible="{bottomTools.settingsBtn.selected}" id="exportPanel" visible.fullScreen="false"/>
	<shell:SavingImagePanel right="49"  bottom="83" styleName="darkPanel" visible="false" id="savingPanel"  />
	
</s:Group>
