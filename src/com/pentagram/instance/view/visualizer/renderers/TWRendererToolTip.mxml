<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"  alpha="0"
		 implements="mx.core.IToolTip" width="200" height.link="85" height="55"   
		 styleName="darkPanel" click="group1_clickHandler(event)"
		 showEffect="{fadeIn}" hideEffect="{fadeOut}" show="group1_showHandler(event)" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:vo="com.pentagram.model.vo.*">
	<fx:Script>
		<![CDATA[
			import flashx.textLayout.conversion.TextConverter;
			
			import mx.events.FlexEvent;
			
			[Bindable]
			public function get text():String {
				return topic.value;
			}
			public function set text(value:String):void {
			}
			
			public function set content(value:String):void {
				ctf =  TextConverter.importToFlow(value,TextConverter.TEXT_FIELD_HTML_FORMAT);
			}

			protected function group1_showHandler(event:FlexEvent):void
			{
				currentState = topic.link ? "link":"normal";
			}


			protected function button1_clickHandler(event:MouseEvent):void
			{
				var url:String = topic.value;
				if(topic.value.substr(0,7) != 'http://')
					url = "http://"+topic.value;
				var req:URLRequest = new URLRequest(url);
				navigateToURL(req, "_blank");
			}


			protected function group1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
			}
	

		]]>
	</fx:Script>
	<fx:Declarations>
		<vo:TwitterTopic id="topic" />	
		<s:Fade id="fadeIn" alphaTo="1" duration="250" />
		<s:Fade id="fadeOut" alphaTo="0" duration="250" />
		<s:TextFlow id="ctf" />
	</fx:Declarations>
	<s:states>
		<s:State name="normal" />
		<s:State name="link" />
	</s:states>
	<s:Path verticalCenter="0" id="leftTip"  winding="nonZero" data="M 0 0 L -16 10 L 0 20 L 0 0 Z">
		<s:fill>
			<s:SolidColor color="#1A1A1A" alpha="0.75"/>
		</s:fill>
		<s:filters>
			<s:DropShadowFilter alpha="0.4" angle="90" distance="2" quality="2"/>
		</s:filters>
	</s:Path>
	
	<s:Path id="rightTp" right="-16" data="M 0 0 L 16 10 L 0 20 L 0 0 Z"  visible="false" verticalCenter="0" winding="nonZero">
		<s:fill>
			<s:SolidColor color="#1A1A1A" alpha="0.75"/>
		</s:fill>
		<s:filters>
			<s:DropShadowFilter alpha="0.4" angle="90" distance="2" quality="2"/>
		</s:filters>
	</s:Path>
	
	<s:Rect radiusX="4" radiusY="4" top="0" bottom="0" left="0" right="0">
		<s:fill>
			<s:SolidColor color="#1A1A1A" alpha="0.75"/>
		</s:fill>
		<s:filters>
			<s:DropShadowFilter alpha="0.4" angle="90" distance="2" quality="2"/>
		</s:filters>
	</s:Rect>
	
	<s:VGroup paddingBottom="5" paddingTop="5" gap="3" verticalCenter="0" left="0" right="0"   horizontalAlign="center">
		<s:Label fontSize="14" maxHeight="35" text="{topic.value}"  paddingLeft="7" paddingRight="7"
		color="#ffffff" maxDisplayedLines="2"  width="100%" fontFamily="FlamaBook"/>
		<s:Line  width="100%" height="1">
			<s:stroke>
				<s:SolidColorStroke caps="none" color="#4D4D4D" joints="miter" miterLimit="4" weight="1"/>
			</s:stroke>
		</s:Line>
		<s:RichText fontSize="14" textFlow="{ctf}" paddingLeft="7" paddingRight="7" color="#ffffff" maxDisplayedLines="1"  width="100%"/>
		<s:Line  width="100%" height="1" includeIn="link">
			<s:stroke>
				<s:SolidColorStroke caps="none" color="#4D4D4D" joints="miter" miterLimit="4" weight="1"/>
			</s:stroke>
		</s:Line>
		<s:Rect height="1" />
		<s:HGroup paddingLeft="7" paddingRight="7" width="100%">
			<s:Button label="This is a link!"  includeIn="link" click="button1_clickHandler(event)" skinClass="com.pentagram.view.skins.buttons.DarkButton" width="100%"/>		
		</s:HGroup>
	</s:VGroup>

</s:Group>	

