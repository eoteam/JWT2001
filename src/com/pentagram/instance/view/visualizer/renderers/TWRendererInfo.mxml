<?xml version="1.0" encoding="utf-8"?>
<controls:ResizableTitleWindow 
	   xmlns:fx="http://ns.adobe.com/mxml/2009" 
	   xmlns:mx="library://ns.adobe.com/flex/mx"
	   xmlns:vo="com.pentagram.model.vo.*" 
	   xmlns:controls="com.pentagram.view.controls.*"
	   xmlns:s="library://ns.adobe.com/flex/spark"
	   x.open="5" y.open="100" 
	   width="200" maxWidth="{wVar}" minWidth="200" 
	   height="80" alpha="0"  width.open="{wVar}" height.open="{hVar}"  minHeight="80"	   
	   close="titlewindow1_closeHandler(event)"
	   creationComplete="titlewindow1_creationCompleteHandler(event)"
	   creationCompleteEffect="{fadeIn}"
	   skinClass="com.pentagram.view.skins.controls.TWTooltipSkin">
	
	<fx:Script>
		<![CDATA[
			import com.pentagram.view.skins.scrollers.ScrollBarSkin;
			
			import flashx.textLayout.conversion.TextConverter;
			
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.MoveEvent;
			import mx.managers.PopUpManager;
			
			import spark.skins.spark.TitleWindowSkin;
			
			private var controlBarPressed:Boolean = false;
			[Bindable] private var wVar:Number = 350;
			[Bindable] private var hVar:Number = 400;
			
			private function titlewindow1_closeHandler(event:CloseEvent):void {
				tipVisible = true;
				PopUpManager.removePopUp(this); 
			}
			public function set content(value:String):void {
				ctf =  TextConverter.importToFlow(value,TextConverter.TEXT_FIELD_HTML_FORMAT);
			}

			protected function button1_clickHandler(event:MouseEvent):void
			{
				if(this.currentState == "closed") {
					wVar = 350;///parent.width*.9>700 ? 700:parent.width*.9;
					hVar = this.parent.height-300;
					this.currentState = "open";
					
				}
				else
					this.currentState = "closed";
			}
			public function close():void {
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE)); 
			}
			private function titlewindow1_creationCompleteHandler(event:FlexEvent):void {
				this.moveArea.addEventListener(MouseEvent.MOUSE_DOWN,controlBarMouseHandler);
				this.moveArea.addEventListener(MouseEvent.MOUSE_UP,controlBarMouseHandler);
				this.moveArea.addEventListener(MouseEvent.MOUSE_MOVE,controlBarMouseHandler);
			}
			private function controlBarMouseHandler(event:MouseEvent):void {
				switch(event.type) {
					case MouseEvent.MOUSE_DOWN:
						controlBarPressed = true;
						break;
					case MouseEvent.MOUSE_UP:
						controlBarPressed = false;
						break;
					case MouseEvent.MOUSE_MOVE:
						if(controlBarPressed)
							this.tipVisible = false;
						break;
				}	
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<fx:Boolean id="tipVisible">true</fx:Boolean>
		<fx:Boolean id="leftTipVisible">true</fx:Boolean>
		<fx:Boolean id="rightTipVisible">false</fx:Boolean>
		<s:Fade id="fadeIn" alphaTo="1" duration="250" />
		<s:TextFlow id="ctf" />
		<vo:TwitterTopic id="topic" />
	</fx:Declarations>	
	<controls:states>
		<s:State name="closed" />
		<s:State name="open" />
	</controls:states>
	
	
	
	<controls:transitions>
		<s:Transition toState="*">
			<s:Parallel>
				<s:Move target="{this}" />
				<s:Resize targets="{[infoContainer,this]}" duration="500" />
			</s:Parallel>	
		</s:Transition>
	</controls:transitions>
	
	<controls:layout>
		<s:VerticalLayout paddingBottom="5" gap="3" />
	</controls:layout>
	
	<s:HGroup paddingLeft="6" paddingRight="6" verticalAlign="middle" height="35" width="100%" >
		<s:Label fontSize="14"  text="{topic.value}" verticalCenter="0" horizontalCenter="0" color="#ffffff" maxDisplayedLines="2"  width="100%"/>
		<s:Button skinClass="com.pentagram.view.skins.buttons.DoubleArrowButton" chromeColor="0x1a1a1a" click="button1_clickHandler(event)" />
	</s:HGroup>
	<s:Line  width="100%" height="1">
		<s:stroke>
			<s:SolidColorStroke caps="none" color="#4D4D4D" joints="miter" miterLimit="4" weight="1"/>
		</s:stroke>
	</s:Line>
	
	<s:RichText  paddingLeft="6" paddingRight="6" fontSize="14" textFlow="{ctf}" verticalCenter="0" horizontalCenter="0" color="#ffffff" maxDisplayedLines="1"  width="100%"/>
	<s:Line  width="100%" height="1" includeIn="open">
		<s:stroke>
			<s:SolidColorStroke caps="none" color="#4D4D4D" joints="miter" miterLimit="4" weight="1"/>
		</s:stroke>
	</s:Line>
	
	<s:List width="100%" visible="true" height.open="100%" height.closed="0" id="infoContainer"  
			creationComplete="infoContainer.scroller.setStyle('skinClass',ScrollBarSkin)" horizontalScrollPolicy="off"
			labelField="text" dataProvider="{topic.tweets}" contentBackgroundAlpha="0" borderVisible="false" >
		<s:itemRenderer>
			<fx:Component>
				<s:ItemRenderer autoDrawBackground="false" width="100%">
					<s:layout>
						<s:VerticalLayout paddingLeft="5" paddingRight="5"/>
					</s:layout>
					<fx:Script>
						<![CDATA[
							import flashx.textLayout.conversion.TextConverter;
							import flashx.textLayout.elements.TextFlow;
							[Bindable] private var textFlow:TextFlow
							override  public function set data(value:Object):void
							{
								super.data = value;
								if(value)
									textFlow = TextConverter.importToFlow(value.text,TextConverter.TEXT_LAYOUT_FORMAT)
								
							}
						]]>
					</fx:Script>
					<s:RichEditableText  focusedTextSelectionColor="0x333333" unfocusedTextSelectionColor="0x333333" 
										 editable="false" selectable="true"   width="100%" textFlow="{textFlow}"  />
					<s:Rect width="100%" height="0.25">
						<s:stroke>
							<s:SolidColorStroke caps="none" color="#4D4D4D" joints="miter" miterLimit="4" weight="1"/>
						</s:stroke>
					</s:Rect>
					<s:Rect height="5" />
				</s:ItemRenderer>
			</fx:Component>
		</s:itemRenderer>
	</s:List>
</controls:ResizableTitleWindow>