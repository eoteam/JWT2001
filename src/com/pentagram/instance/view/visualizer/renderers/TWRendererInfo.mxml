<?xml version="1.0" encoding="utf-8"?>
<renderers:BaseRendererInfo 
	   xmlns:fx="http://ns.adobe.com/mxml/2009" 
	   xmlns:mx="library://ns.adobe.com/flex/mx"
	   xmlns:vo="com.pentagram.model.vo.*" 
	   xmlns:controls="com.pentagram.view.controls.*"
	   xmlns:s="library://ns.adobe.com/flex/spark"
	   dragComplete="arranged=false"
	   width="200" maxWidth="{wVar}" minWidth="200" 
	   height="80" alpha="0"  width.open="{wVar}" 
	   height.open="{hVar}"  minHeight="80"	   
	   stateChangeComplete="resizabletitlewindow1_stateChangeCompleteHandler(event)"	   
	   skinClass="com.pentagram.view.skins.controls.TWTooltipSkin"
	   xmlns:renderers="com.pentagram.instance.view.visualizer.renderers.*">
	
	<fx:Script>
		<![CDATA[
			import com.pentagram.view.skins.scrollers.ScrollBarSkin;
			
			import flashx.textLayout.conversion.TextConverter;
			
			import mx.events.FlexEvent;
			private var prevY:Number;
			protected function button1_clickHandler(event:MouseEvent):void
			{
				if(this.currentState == "closed") {
					wVar = 350;///parent.width*.9>700 ? 700:parent.width*.9;
					hVar = isNaN(hVar) ? this.parent.height-300 : hVar;
					this.currentState = "open";
					prevY = this.y;
					moveEff.yTo = 5;
					
				}
				else {
					moveEff.yTo = prevY;
					this.currentState = "closed";
					
				}
				if(!arranged)
					moveEff.play();
			}

			private function resizabletitlewindow1_stateChangeCompleteHandler(event:FlexEvent):void
			{
				if(currentState == "closed") {
					pinned = previousTipVisible;					
				}
				else {
					previousTipVisible = pinned;
					pinned = false;
				}	
			}
			override public function get data():Object {
				return topic;
			}
			override public function set data(value:Object):void {
				topic = value as TwitterTopic;
			}
			override public function set content(value:String):void {
				super.content = value;
				ctf =  TextConverter.importToFlow(value,TextConverter.TEXT_FIELD_HTML_FORMAT);
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<vo:TwitterTopic id="topic" />
		<fx:Number id="wVar">450</fx:Number>
		<fx:Number id="hVar">NaN</fx:Number>
		<s:Move target="{this}"  id="moveEff" />
		<fx:Boolean id="arranged">false</fx:Boolean>
	</fx:Declarations>	
	<renderers:states>
		<s:State name="closed" />
		<s:State name="open" />
	</renderers:states>
	
	<renderers:transitions>
		<s:Transition toState="*">
			<s:Parallel>
				<s:Resize targets="{[infoContainer,this]}" duration="500" />
			</s:Parallel>	
		</s:Transition>
	</renderers:transitions>
	
	<renderers:layout>
		<s:VerticalLayout paddingBottom="5" gap="3" />
	</renderers:layout>
	
	<s:HGroup paddingLeft="6" paddingRight="6" verticalAlign="middle" height="35" width="100%" >
		<s:Label fontSize="14"  text="{topic.value}" verticalCenter="0" horizontalCenter="0" color="#ffffff" maxDisplayedLines="2"  width="100%"/>
		<s:Button skinClass="com.pentagram.view.skins.buttons.DoubleArrowButton" chromeColor="0x1a1a1a" click="button1_clickHandler(event)" />
	</s:HGroup>
	<s:Line  width="100%" height="1">
		<s:stroke>
			<s:SolidColorStroke caps="none" color="#4D4D4D" joints="miter" miterLimit="4" weight="1"/>
		</s:stroke>
	</s:Line>
	
	<s:RichText fontLookup="embeddedCFF"  paddingLeft="6" paddingRight="6" fontSize="14" textFlow="{ctf}" verticalCenter="0" 
	horizontalCenter="0" color="#ffffff" maxDisplayedLines="1"  width="100%"/>
	
	<s:Line  width="100%" height="1" includeIn="open">
		<s:stroke>
			<s:SolidColorStroke caps="none" color="#4D4D4D" joints="miter" miterLimit="4" weight="1"/>
		</s:stroke>
	</s:Line>
	
	<s:List width="100%" visible="true" height.open="100%" height.closed="0" id="infoContainer"  
			creationComplete="infoContainer.scroller.setStyle('skinClass',ScrollBarSkin)" horizontalScrollPolicy="off"
			labelField="text" dataProvider="{topic.tweets}" contentBackgroundAlpha="0" borderVisible="false" >
		<s:itemRenderer>
			<fx:Component>
				<s:ItemRenderer autoDrawBackground="false" width="100%" dataChange="itemrenderer1_dataChangeHandler(event)">
					<s:layout>
						<s:VerticalLayout paddingLeft="5" paddingRight="5"/>
					</s:layout>
					<fx:Script>
						<![CDATA[
							import mx.events.FlexEvent;
							import flashx.textLayout.conversion.TextConverter;
							import flashx.textLayout.elements.TextFlow;
							[Bindable] private var textFlow:TextFlow
							override  public function set data(value:Object):void
							{
								super.data = value;
								if(value)
									textFlow = TextConverter.importToFlow(value.text,TextConverter.TEXT_LAYOUT_FORMAT)
								
							}

							protected function itemrenderer1_dataChangeHandler(event:FlexEvent):void
							{
								if(data)
									textFlow = TextConverter.importToFlow(data.text,TextConverter.TEXT_LAYOUT_FORMAT);
							}

						]]>
					</fx:Script>
					<s:RichEditableText  focusedTextSelectionColor="0x333333" unfocusedTextSelectionColor="0x333333" 
					editable="false" selectable="true"   width="100%" textFlow="{textFlow}"  />
					<s:Rect width="100%" height="0.25">
						<s:stroke>
							<s:SolidColorStroke caps="none" color="#4D4D4D" joints="miter" miterLimit="4" weight="1"/>
						</s:stroke>
					</s:Rect>
					<s:Rect height="5" />
				</s:ItemRenderer>
			</fx:Component>
		</s:itemRenderer>
	</s:List>
</renderers:BaseRendererInfo>