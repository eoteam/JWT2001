<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:mx="library://ns.adobe.com/flex/mx"   creationComplete="group1_creationCompleteHandler(event)"
				 xmlns:vis="flare.flex.vis.*" width="100%" height="100%" xmlns:vo="com.pentagram.model.vo.*"  
				 >
	<fx:Script>
		<![CDATA[
			import flare.data.DataSet;
			import flare.data.DataSource;
			import flare.data.converters.Converters;
			import flare.data.converters.IDataConverter;
			import flare.scale.ScaleType;
			import flare.vis.Visualization;
			import flare.vis.data.Data;
			import flare.vis.operator.encoder.ColorEncoder;
			import flare.vis.operator.encoder.ShapeEncoder;
			import flare.vis.operator.layout.AxisLayout;
			
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			
			private var vis:Visualization;
		
			
			private function group1_creationCompleteHandler(event:FlexEvent):void
			{
				var conv:IDataConverter = Converters.lookup("json");
				var ds:DataSet = conv.read(dataset.data);
				visualize(Data.fromDataSet(ds));
			}
			 
			private function visualize(data:Data):void
			{
				vis = new Visualization(data);
				vis.bounds = new Rectangle(0, 0, this.width, this.height);
				vis.x = 20;
				vis.y = 20;
				holder.addChild(vis);
				 
				vis.operators.add(new AxisLayout("data.yea", "data.age"));
				vis.operators.add(new ColorEncoder("data.cause", Data.NODES,
					"lineColor", ScaleType.CATEGORIES));
				vis.operators.add(new ShapeEncoder("data.race"));
				vis.data.nodes.setProperties({fillColor:0, lineWidth:2});
				
				
				//effectively only hides top and right borders
				vis.xyAxes.showBorder = false;
				// show bottom border
				vis.xyAxes.showXLine = true;
				// show left border
				vis.xyAxes.showYLine = true;
				// hide vertical grid lines (along x axis)
				vis.xyAxes.xAxis.showLines = false;
				// hide horizontal grid lines (along y axis)
				vis.xyAxes.yAxis.showLines = false;
				vis.update();
				this.addEventListener(ResizeEvent.RESIZE,group1_resizeHandler);
			}

			protected function group1_resizeHandler(event:ResizeEvent):void
			{
				
				vis.bounds = new Rectangle(0, 0, this.width, this.height);
				vis.update();
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<vo:Dataset id="dataset" />
	</fx:Declarations>
	<s:SpriteVisualElement id="holder"  width="100%" height="100%"  />
</s:Group>
