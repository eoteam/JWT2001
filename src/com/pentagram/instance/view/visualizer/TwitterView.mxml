<?xml version="1.0" encoding="utf-8"?>
<modules:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:modules="ws.tink.spark.modules.*" 
				creationComplete="creationCompleteHandler(event)" resize="updateSize()"
				width="100%" height="100%" xmlns:views="com.pentagram.instance.view.visualizer.views.*">
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			import com.pentagram.instance.view.visualizer.views.TwitterPacking;
			
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			[Embed(source="/assets/fonts/FlamaBold.ttf", fontName="FlamaBookMx2",embedAsCFF="false",mimeType = "application/x-font")]
			private var _flamaBook:Class;
			
			
			private var counter:int = 1;
			private var pageTotal:int = 4;
			
			private var arr:Array = [];
			protected var resizeFlag:Boolean = false
			
			private var pack:TwitterPacking;

			private var text:String = '';
			private var common:Array = ["the","be","to","of","and","a","in","that","have","I","it","for","not","on","with","he","as","you","do",
				"at","this","but","his","by","from","they","we","say","her","she","or","an","will","my","one","all","would","there",
				"their","what","so","up","out","if","about","who","get","which","go","me","when","make","can","like","time","no",
				"just","him","know","take","person","into","year","your","good","some","could","them","see","other","than","then",
				"now","look","only","come","its","over","think","also","back","after","use","two","how","our","work","first","well",
				"way","even","new","want","because","any","these","give","day","most","us",
				
				"http","bit","ly","pentagramdesign","rt","www","com","pentagram","designers","here","lots","ever"];
			
			protected function httpservice1_resultHandler(event:ResultEvent):void
			{
				var o:Object  = JSON.decode(event.result.toString());
				arr = arr.concat(o.results);
				for each(var item:Object in o.results) {
					text+= item.text + "\n";
				}
				if(counter < pageTotal) {
					service.url = "http://search.twitter.com/search.json?q=pentagramdesign&rpp=100&page="+counter.toString();
					service.send();
				}
				else  {
					var a:Array = countWords(text,0);
					pack = new TwitterPacking(a,this);
					pack.percentHeight = pack.percentWidth = 100;
					//circle.name = item.name;
					this.addElement(pack);
					pack.build();
					updateSize();
				}
				counter++;
			}
			public function updateSize():void {
				resizeFlag = true;
				this.invalidateDisplayList();
			}
			override protected function updateDisplayList(w:Number, h:Number):void {
				super.updateDisplayList(w,h);
				if(resizeFlag) {
					resizeFlag = false;
					handleResize();
				}
			}
			private function handleResize(event:Event=null):void {
				if(pack){
					pack.percentHeight = pack.percentWidth = 100;
					pack.draw();			
				}
			}
			private function countWords(text:String,p:int):Array
			{
				var m:Array = new Array(10000);
				var m1:Array = new Array(10000);
				var N:Array = new Array (10000);
				var NN:int=0;
				var Numwords:int = 0;
				var ch:int=p;
				var k1:int;var k:int;var j:int;
				var A:String = text;			// original message 
				var B:String = "";
				var C:String="";
				var str:String=" ";
				
				A =" " + A+" ";
				A = A.toUpperCase();		// changes all alphas to Upper case
				if(ch==0) {
					for (var i:int=0;i<=A.length-1;i++)
					{	
						k= A.charCodeAt(i);
						if (((k>64) && (k<91)) || (k==32))
						{	
							C=C+A.charAt(i);
						}
						else 
						{	
							C=C+" ";
						}
					}
					A=C;
				}
				else
				{
					for (i=0;i<=A.length-1;i++)
					{	k=A.charCodeAt(i);
						if (k>31)
						{	
							C=C+A.charAt(i);
						}
						else 
						{	
							C=C+" ";
						}
					}
					A=C;	
				}
				for (i=1;i<=A.length;i++)		//  trims leading spaces and multiple spaces
				{	
					if ((!(A.charAt(i)==" ")) || (!(A.charAt(i-1)==" ")))
					{
						B=B + A.charAt(i);
					}
				}
				//count.result1.value=B;
				B=B+" ";				// makes sure there is a space at end	
				k=0; 
				
				for (i=0;i<=B.length;i++)
				{	
					k1 = B.indexOf(str,k);
					if (k1==-1)		//end of string B
					{	Numwords=i-1;
						break;
					}
					var w:String = B.substring(k,k1);			
					m[i+1]= w;// places all the words into an array m
					k=k1+1;
				}
				//count.result1.value=B; 
				C="";
				
				for (i=1;i<=Numwords; i++)	// Numwords is total number of words
				{	
					if (!(m[i]==""))	// only looks at m1 words that have not been processed before (not empty)
					{	
						NN=NN+1;			//unique word stored in m1 array
						m1[NN]=m[i];
						N[NN]=1;			// initialize counter for word
						for (j=i+1;j<=Numwords+1;j++)	//counts and makes m1 elements with unique word empty.
						{	
							if (m1[NN]==m[j])
							{	
								N[NN]=N[NN]+1;
								m[j]="";
							}
						}	
					}	
				}	
				for (i=1;i<=NN-1;i++)
				{	
					for (j=i+1;j<=NN;j++)
					{	
						if (N[i]<N[j])
						{	
							var temp:String = m1[i];
							m1[i]=m1[j];
							m1[j]=temp;
							temp=N[i];
							N[i]=N[j];
							N[j]=temp;
						}
					}
				}
				C=C+"Unique:" + NN+"  Total:" + Numwords+"\n";
				C=C+"Freq.\tWord\n";
				var results:Array = [];
				for (i=1;i<=NN;i++)		// sets up C for showing
				{	
					//trace(N[0],N[i],N[0]*0.1);
					if(common.indexOf(m1[i].toLowerCase()) == -1 && m1[i].length > 1 && N[i] >= N[1]*0.1)
						results.push({count:N[i],word:m1[i]});
					C=C + N[i]+ "\t" + m1[i] + "\n";
				}
				area.text = C;
				return results;
			}
			
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				service.url = "http://search.twitter.com/search.json?q=pentagramdesign&rpp=100&page=1";
				service.send();
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:HTTPService id="service"  resultFormat="text" concurrency="multiple"
					   result="httpservice1_resultHandler(event)" 
					   method="GET"/>
	</fx:Declarations>
	<s:TextArea width="300" height="100%" id="area" />
</modules:Module>
