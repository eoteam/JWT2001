<?xml version="1.0" encoding="utf-8"?>
<s:Window xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:assets="com.pentagram.view.assets.*" 
				xmlns:shell="com.pentagram.instance.view.shell.*" 
				xmlns:vo="com.pentagram.model.vo.*"  
				xmlns:events="flash.events.*"
				xmlns:controls="com.pentagram.view.controls.*"
				xmlns:debugger="it.flashfuck.debugger.*"
				width="1024" height="768" showStatusBar="true" click="window1_clickHandler(event)"
				preinitialize="preinit(event)"  title="View" creationPolicy="none">
	<fx:Script>
		<![CDATA[
			import com.pentagram.main.event.ViewEvent;
			
			import flashx.textLayout.conversion.TextConverter;
			
			import mx.events.AIREvent;
			import mx.events.FlexEvent;
			public var context:InstanceContext;  
			protected function preinit(event:FlexEvent):void
			{
				context = new InstanceContext(appEventDispatcher,this);
				this.nativeWindow.x = (Capabilities.screenResolutionX - this.width) / 2;
				this.nativeWindow.y = (Capabilities.screenResolutionY - this.height) / 2; 
			}
			public function get nativeX():Number
			{
				return nativeWindow.x;
			}
			public function get nativeY():Number
			{
				return nativeWindow.y;
			}
			public function get nativeW():Number
			{
				return nativeWindow.width;
			}
			public function get nativeH():Number
			{
				return nativeWindow.height;
			}
			public function get nativeBounds():Rectangle
			{
				return nativeWindow.bounds;
			}
			public function set nativeBounds(value:Rectangle):void
			{
				nativeWindow.bounds = value;
			}  			

			public function cleanup():void
			{
				context.shutdown();
				appEventDispatcher = null;
				this.removeAllElements();
			}
			private function window1_clickHandler(event:MouseEvent):void
			{
				if(event.target != loginBtn) {
					if(event.target is DisplayObject && loginPanel.contains(DisplayObject(event.target)))
						return;
					loginBtn.selected = false;					
				}
			}
			public var compareArgs:Array;
			
			public function set windowFocused(value:Boolean):void {
				this.dispatchEvent(new ViewEvent(ViewEvent.WINDOW_FOCUS,value));
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<vo:Client id="client" />
		<events:EventDispatcher id="appEventDispatcher" />
	</fx:Declarations>
	<s:states>
		<s:State name="search" id="searchState" />
		<s:State name="visualizer" id="visualizerState" />
		<s:State name="editor" id="editorState" />
	</s:states>
	
	<shell:Search id="searchView" width="100%" height="100%" includeIn="search" horizontalCenter="0" verticalCenter="0"/>
	<shell:Shell id="shellView" width="100%" height="100%"  includeIn="visualizer" horizontalCenter="0" verticalCenter="0"/>
	<controls:ProgressIndicator verticalCenter="0" horizontalCenter="0" visible="false"  id="progressIndicator"/>
	
	<s:HGroup bottom="4" verticalAlign="middle" width="100%" paddingLeft="18" paddingRight="10" includeIn="search">
		<s:ToggleButton id="loginBtn"  width="24" height="24" skinClass="com.pentagram.view.skins.buttons.WhiteLoginButton" selected.visualizer="false" selected.editor="false"/> 
		<s:Rect width="100%" />
		<s:Group>
			<s:Path verticalCenter="0" data="M5 12 7.15 12 7.15 28.65Q7.15 32.3 5.2 34.4 3.25 36.45 0 36.5L0 34.65Q5 34.45 5 27.9L5 12M27.5 19 24.7 12 26.95 12 28.6 16.05 30.1 12 32.2 12 29.65 18.75 32.7 26.55 38.1 12 40.25 12 33.2 30.45 32.1 30.45 28.55 21.6 25.2 30.45 24.05 30.45 16.7
					12 18.95 12 24.7 26.55 27.5 19M46.75 12 60.65 12 60.65 13.85 54.8 13.85 54.8 30.4 52.65 30.4 52.65 13.85 46.75 13.85 46.75 12">
				<s:fill>
					<s:SolidColor color="#181A19"/>
				</s:fill>
			</s:Path>
		</s:Group>
	</s:HGroup>	
	<shell:LoginPanel  id="loginPanel" bottom="48" left="10" tipPadding="-95" visible="{loginBtn.selected}" />
	
	

	<!--<debugger:FlexFPSMonitor />-->
</s:Window>
